#!/bin/bash

set -e

RSETUP_INTERACTIVE=0

source /lib/rsetup/utils.sh
source /lib/rsetup/block_helpers.sh

_rootfs-setup() {
    apt clean
    rm -rf /var/lib/apt/lists/*
    rm /etc/resolv.conf
    echo radxa > /etc/hostname
    useradd -c Radxa -G audio,video,sudo -m -s "$(which bash)" radxa
    echo "radxa:radxa" | chpasswd
    cat << EOF > /etc/hosts
127.0.0.1 localhost
127.0.1.1 radxa

# The following lines are desirable for IPv6 capable hosts
#::1     localhost ip6-localhost ip6-loopback
#fe00::0 ip6-localnet
#ff00::0 ip6-mcastprefix
#ff02::1 ip6-allnodes
#ff02::2 ip6-allrouters
EOF
    echo locales locales/default_environment_locale select en_US.UTF-8 | debconf-set-selections
    echo locales locales/locales_to_be_generated multiselect en_US.UTF-8 UTF-8 | debconf-set-selections
    rm /etc/locale.gen
    dpkg-reconfigure --frontend noninteractive locales
    rm /etc/ssh/ssh_host_*
    systemctl enable rsetup-first-boot.service
}

_first-boot() {
    dpkg-reconfigure -f noninteractive openssh-server

    local ROOT_DEV=$(_get_root_dev)
    local PART_ENTRY_NUMBER=$(udevadm info --query=property --name=$ROOT_DEV | grep '^ID_PART_ENTRY_NUMBER=' | cut -d'=' -f2)
    local PART_TABLE_TYPE=$(udevadm info --query=property --name=$ROOT_DEV | grep '^ID_PART_TABLE_TYPE=' | cut -d'=' -f2)
    local BLOCK_DEV=$(_get_block_dev)

    if [[ $PART_TABLE_TYPE == "gpt" ]]
    then
        sgdisk -e $BLOCK_DEV
        partprobe
    fi

    cat << EOF | parted ---pretend-input-tty $BLOCK_DEV
resizepart ${PART_ENTRY_NUMBER} 
yes
100%
EOF
    partprobe
    resize2fs $ROOT_DEV

    systemctl disable rsetup-first-boot.service
}

_update-uenv() {
    _parameter_count_check 1 "$@"
    _assert_f "/boot/uEnv-$1.txt"

    cp "/boot/uEnv-$1.txt" /boot/uEnv.txt
    echo "rootuuid=$(blkid --output value --match-tag UUID $(_get_root_dev))" >> /boot/uEnv.txt
}

update-bootloader() {
    _parameter_count_check 1 "$@"
    _assert_f "/usr/lib/u-boot-$1/u-boot.bin.sd.bin"

    local DEVICE=$(_get_block_dev)

    dd if=/usr/lib/u-boot-$1/u-boot.bin.sd.bin of=$DEVICE bs=1 count=444
    dd if=/usr/lib/u-boot-$1/u-boot.bin.sd.bin of=$DEVICE bs=512 skip=1
}

if (( $# == 0 )) || [[ $1 == main ]]
then
    main
else
    if [[ $(type -t $1) == function ]]
    then
        "$@"
    else
        echo $1 is not a valid function.
    fi
fi
